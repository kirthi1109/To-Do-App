{"version":3,"sources":["logo.svg","ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","onClick","deleteItem","icon","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","filteredItems","filter","console","log","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAAe,I,kCC8BEA,MAzBjB,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GAEzB,OAAO,qBAAKC,UAAU,OAAf,SACT,8BACI,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAAKC,MAAOL,EAAKM,KAAMC,SAAU,SAACC,GAC1DZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAML,EAAKI,QACzC,+BAEA,cAAC,IAAD,CAAiBH,UAAU,UAAUU,QAAS,WAC1Cf,EAAMgB,WAAWZ,EAAKI,MACvBS,KAAK,gBARyBb,EAAKI,QAa1C,OAAO,8BACH,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACClB,O,eCjBTmB,IAAQC,IAAIC,K,IA8EGC,E,kDA3Eb,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,MAAM,CACTtB,MAAM,GACNuB,YAAY,CACVf,KAAK,GACLF,IAAI,KAGR,EAAKkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKX,WAAa,EAAKA,WAAWW,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAZA,E,+CAcnB,SAAYf,GACViB,KAAKC,SAAS,CACZL,YAAY,CACVf,KAAME,EAAEE,OAAOL,MACfD,IAAIuB,KAAKC,W,qBAIf,SAAQpB,GACNA,EAAEqB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAC3B,GAAmB,KAAhBS,EAAQxB,KAAW,CACpB,IAAMR,EAAK,sBAAO2B,KAAKL,MAAMtB,OAAlB,CAAyBgC,IACtCL,KAAKC,SAAS,CACZ5B,MAAOA,EACPuB,YAAY,CACVf,KAAK,GACLF,IAAI,S,wBAKV,SAAWA,GACT,IAAM2B,EAAeN,KAAKL,MAAMtB,MAAMkC,QAAO,SAAAhC,GAAI,OAC/CA,EAAKI,MAAMA,KACbqB,KAAKC,SAAS,CACZ5B,MAAOiC,M,uBAIX,SAAUzB,EAAKF,GACb6B,QAAQC,IAAI,SAAST,KAAKL,MAAMtB,OAChC,IAAMA,EAAQ2B,KAAKL,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZ6B,QAAQC,IAAIlC,EAAKI,IAAK,OAAOA,GAC7BJ,EAAKM,KAAMA,MAGfmB,KAAKC,SAAS,CACZ5B,MAAOA,M,oBAGX,WACE,OACE,qBAAKG,UAAY,MAAjB,SACE,mCACA,uBAAME,GAAK,aAAagC,SAAYV,KAAKD,QAAzC,UACE,uBAAOtB,KAAO,OAAOkC,YAAc,iBACnC/B,MAASoB,KAAKL,MAAMC,YAAYf,KAChCC,SAAYkB,KAAKH,cACjB,wBAAQpB,KAAO,SAAf,oBAEF,4BAAIuB,KAAKL,MAAMtB,MAAMQ,OACnB,cAAC,EAAD,CAAWR,MAAO2B,KAAKL,MAAMtB,MAAOc,WAAYa,KAAKb,WAAYH,UAAWgB,KAAKhB,qB,GArEzE4B,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1b27758c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './ListItems.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction ListItems(props){\r\n    const items = props.items;\r\n    const listItems = items.map(item =>\r\n   {\r\n       return <div className=\"list\" key={item.key}>\r\n     <p>\r\n         <input type=\"text\" id={item.key} value={item.text} onChange={(e)=>{\r\n             props.setUpdate(e.target.value,item.key)}}/>\r\n        <span>\r\n       \r\n        <FontAwesomeIcon className=\"faicons\" onClick={() => {\r\n            props.deleteItem(item.key)\r\n        }} icon=\"trash\" />\r\n        </span>\r\n     </p>\r\n     \r\n    </div>})\r\n    return <div>\r\n        <FlipMove duration={300} easing=\"ease-in-out\">\r\n        {listItems}\r\n        </FlipMove>\r\n    \r\n    </div>;\r\n  }\r\n\r\n  export default ListItems;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport ListItems from './ListItems'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash)\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      items:[],\n      currentItem:{\n        text:'',\n        key:''\n      }\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n  handleInput(e) {\n    this.setState({\n      currentItem:{\n        text: e.target.value,\n        key:Date.now()\n      }\n    })\n  }\n  addItem(e){\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    if(newItem.text !==\"\"){\n      const items = [...this.state.items, newItem];\n    this.setState({\n      items: items,\n      currentItem:{\n        text:'',\n        key:''\n      }\n    })\n    }\n  }\n  deleteItem(key){\n    const filteredItems= this.state.items.filter(item =>\n      item.key!==key);\n    this.setState({\n      items: filteredItems\n    })\n\n  }\n  setUpdate(text,key){\n    console.log(\"items:\"+this.state.items);\n    const items = this.state.items;\n    items.map(item=>{      \n      if(item.key===key){\n        console.log(item.key +\"    \"+key)\n        item.text= text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n  render() {\n    return ( \n      <div className = \"App\">\n        <header>\n        <form id = \"to-do-form\" onSubmit = {this.addItem}>\n          <input type = \"text\" placeholder = \"Enter the Task\"\n          value = {this.state.currentItem.text}\n          onChange = {this.handleInput}></input>\n          <button type = \"submit\">Add</button>\n        </form>\n        <p>{this.state.items.text}</p> \n          <ListItems items={this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate}/>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}